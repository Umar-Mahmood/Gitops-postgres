#install argodd

kubectl create ns argocd && \
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl -n argocd get pods


kubectl port-forward svc/argocd-server -n argocd 8080:443


kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo



#install postgress


kubectl apply -k ./manifests/ 
kubectl apply -f ./manifests/minimal-postgres-manifest.yaml 

#bitnami secrets
kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.25.0/controller.yaml

kubeseal --fetch-cert > pub-cert.pem


kubectl apply -f zilando-CRDs/postgres-config/postgres-cluster.yaml 


#make the application and connect it with the argoCD from the repo
#first part is complete... 


#second part for user management.


kubectl create secret generic postgres.credentials \
  -n postgres \
  --from-literal=password='postgres'

kubectl get secret postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do -n default -o yaml \
  | sed 's/namespace: default/namespace: postgres/' \
  | kubectl apply -f -



kubectl apply -f controller/rbac.yaml
kubectl apply -f controller/deployment.yaml

# now apply the empty user manifest
kubectl apply -f users-config.yaml

#and create the second argoCD app... to sync the users... and sync the users there...

kubectl logs -f deployment/user-controller -n postgres


#get the secrets
kubectl get secret postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do -o yaml

#and then decode it...
echo QzZ4a1oxWE9HYnVmOW4xdGdEa2NCdmJwZFdJamM1a2k0UjZXMWR0R3poSFdaQVJqWTdXZ2xQVXpKQWcyNmNFQQ== | base64 -d
